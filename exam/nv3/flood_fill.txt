Nome do exercício  : flood_fill
Arquivos esperados : flood_fill.c
Funções permitidas : nenhuma
--------------------------------------------------------------------------------

Escreva uma função que recebe um `char **` representando um array 2D de caracteres, um `t_point` que contém as dimensões desse array, e um `t_point` indicando o ponto inicial.

Começando a partir do ponto `begin` dado, essa função deve preencher uma zona inteira substituindo os caracteres dentro dela pelo caractere 'F'. Uma zona é um grupo de caracteres iguais delimitado horizontalmente e verticalmente por outros caracteres diferentes ou pela borda do array.

A função `flood_fill` não preenche diagonalmente.

A função `flood_fill` deve ser prototipada assim:
  `void  flood_fill(char **tab, t_point size, t_point begin);`

A estrutura `t_point` é prototipada assim (coloque dentro do arquivo `flood_fill.c`):

  ```c
  typedef struct  s_point
  {
    int           x;
    int           y;
  }               t_point;


$> cat test.c
#include <stdlib.h>
#include <stdio.h>

char** make_area(char** zone, t_point size)
{
	char** new;

	new = malloc(sizeof(char*) * size.y);
	for (int i = 0; i < size.y; ++i)
	{
		new[i] = malloc(size.x + 1);
		for (int j = 0; j < size.x; ++j)
			new[i][j] = zone[i][j];
		new[i][size.x] = '\0';
	}

	return new;
}

int main(void)
{
	t_point size = {8, 5};
	char *zone[] = {
		"11111111",
		"10001001",
		"10010001",
		"10110001",
		"11100001",
	};

	char**  area = make_area(zone, size);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	printf("\n");

	t_point begin = {7, 4};
	flood_fill(area, size, begin);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	return (0);
}

$> gcc flood_fill.c test.c -o test; ./test
11111111
10001001
10010001
10110001
11100001

FFFFFFFF
F000F00F
F00F000F
F0FF000F
FFF0000F
$